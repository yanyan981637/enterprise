<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <style>
        /* 頁面內容初始為隱藏狀態 */
        #verify-body {
            display: none;
        }

        /* Loading 視覺效果 */
        #loading-spinner {
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            border: 8px solid #f3f3f3;
            border-top: 8px solid #F26333;
            border-radius: 50%;
            width: 50px;
            height: 50px;
            animation: spin 1s linear infinite;
            z-index: 9999;
        }

        @keyframes spin {
            0% {
                transform: translate(-50%, -50%) rotate(0deg);
            }

            100% {
                transform: translate(-50%, -50%) rotate(360deg);
            }
        }
    </style>
    <script>
        (function() {
            const urlParams = new URLSearchParams(window.location.search);
            const shortCode = urlParams.get('s_c');

            // 取得當前的完整 URL
            const currentUrl = window.location.href;
            let vmb2c_url = "https://dashcam-api.visionmaxfleet.com";

            // 如果當前 URL 包含生產環境的基礎 URL，進行替換
            if (currentUrl.includes("https://mio.com/")) {
                // 替換成目標生產環境的 URL
                vmb2c_url = "https://dashcam-api.visionmaxfleet.com";
            } else {
                vmb2c_url = "https://dev-dashcam-api.visionmaxfleet.com";
            }

            console.log('vmb2c_url:' + vmb2c_url);

            if (shortCode) {
                fetch(`${vmb2c_url}/${shortCode}`)
                    .then(response => response.json())
                    .then(data => {
                        if (data.message === 'SendInvitation') {
                            window.location.replace(data.data);
                        } else {
                            document.getElementById('loading-spinner').style.display = 'none';
                            document.getElementById('verify-body').style.display = 'block';
                        }
                    })
                    .catch(error => {
                        console.error('Error:', error);
                        window.alert("AnErrorOccurred");
                        document.getElementById('loading-spinner').style.display = 'none';
                        document.getElementById('verify-body').style.display = 'block';
                    });
            } else {
                document.getElementById('loading-spinner').style.display = 'none';
                document.getElementById('verify-body').style.display = 'block';
            }
        })();
    </script>
    <style>
        .notification {
            display: none;
            position: fixed;
            top: 20px;
            right: 20px;
            background-color: #ffffff;
            color: black;
            padding: 15px;
            border-radius: 5px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        }

        @media (max-width: 767px) {
            .notification {
                top: 60px;
                right: 20px;
            }
        }

        .close-btn {
            position: absolute;
            top: 5px;
            right: 10px;
            font-size: 18px;
            cursor: pointer;
        }

        .checkmark {
            font-size: 24px;
        }

        .message {
            margin-top: 10px;
        }

        #video-section {
            display: none;
        }

        #remove-contact-btn {
            display: none;
        }

        .notification .close-btn {
            position: absolute;
            top: 10px;
            top: 5px;
            right: 10px;
            font-size: 18px;
            cursor: pointer;
            font-size: 16px;
            font-weight: bold;
        }

        .otp-input {
            width: 40px !important;
            height: 40px !important;
            font-size: 24px !important;
            text-align: center !important;
            border: 2px solid #ccc !important;
            border-radius: 5px !important;
            outline: none !important;
        }

        .otp-container {
            display: flex !important;
            justify-content: center !important;
            gap: 10px !important;
            /* Space between the input fields */
            margin: 20px auto !important;
            max-width: 300px !important;
            /* Maximum width for the input fields container */
            color: #666;
            font-size: 14.45px;
        }

        @media (max-width: 767px) {
            .otp-container {
                gap: 5px !important;
                font-size: 13.3px !important;
            }
        }

        .otp-input {
            width: 45px !important;
            ;
            height: 45px !important;
            ;
            font-size: 24px !important;
            ;
            text-align: center !important;
            ;
            border: 2px solid #ccc !important;
            ;
            border-radius: 5px !important;
            ;
            outline: none !important;
            ;
        }

        #input-container {
            display: flex;
            ;
            justify-content: center;
            ;
            align-items: center;
            ;
            flex-direction: column;
            ;
            min-height: 50vh;
            ;
        }

        .video-container {
            width: 100%;
            /* 容器寬度設置為 100%，適應不同屏幕尺寸 */
            max-width: 640px;
            /* 設定容器最大寬度為 640px */
            margin: 0 auto;
            /* 將容器置中 */
        }

        .video-container video {
            width: 100%;
            /* 視頻寬度占據容器的 100% */
            height: auto;
            /* 自動調整高度以保持寬高比 */
            display: block;
            /* 移除視頻標籤默認的內聯塊樣式 */
        }

        /* 使用 @media 查詢對不同設備進行調整 */
        @media (max-width: 767px) {
            .video-container {
                max-width: 100%;
                /* 在較小屏幕上，容器寬度設置為 100% */
            }
        }


        @media (max-width: 767px) {
            .otp-input {
                width: 45px !important;
                ;
                /* Adjust the size for smaller screens */
                height: 45px !important;
                ;
                font-size: 20px !important;
                ;
            }
        }

        .otp-input:focus {
            border-color: #007bff !important;
        }

        .remove-contact-btn {
            background-color: transparent;
            border: none;
            color: #666666;
            font-size: 16px;
            cursor: pointer;
            padding: 0;
            font-family: Arial, sans-serif;
            text-align: left;
            display: inline-block;
        }

        .remove-contact-btn .highlight {
            color: #ff6600;
            font-weight: bold;
        }
    </style>
</head>




<body>
    <div id="loading-spinner"></div>

    <div id="verify-body">


        <div id="input-container">
            <div class="otp-container"><?= __('Enter the 6-digit verification code we sent to you.'); ?>
            </div>
            <div class="otp-container">
                <input type="text" class="otp-input" maxlength="1" pattern="\d" inputmode="numeric">
                <input type="text" class="otp-input" maxlength="1" pattern="\d" inputmode="numeric">
                <input type="text" class="otp-input" maxlength="1" pattern="\d" inputmode="numeric">
                <input type="text" class="otp-input" maxlength="1" pattern="\d" inputmode="numeric">
                <input type="text" class="otp-input" maxlength="1" pattern="\d" inputmode="numeric">
                <input type="text" class="otp-input" maxlength="1" pattern="\d" inputmode="numeric">
            </div>
            <button id="submit-button" class="button secondary"><?= __('Verify'); ?></button>

        </div>

        <div id="input-container2">
            <div id="video-section">

            </div>

            <button id="remove-contact-btn" class="remove-contact-btn">
                <span class="highlight"><?= __('Stop'); ?></span><?= __('receiving incident alerts from Mio.'); ?>
            </button>

        </div>
    </div>

    <script>
        // 取得當前的完整 URL
        const currentUrl = window.location.href;
        let vmb2c_url = "https://dashcam-api.visionmaxfleet.com";

        // 如果當前 URL 包含生產環境的基礎 URL，進行替換
        if (currentUrl.includes("https://mio.com/")) {
            // 替換成目標生產環境的 URL
            vmb2c_url = "https://dashcam-api.visionmaxfleet.com";
        } else {
            vmb2c_url = "https://dev-dashcam-api.visionmaxfleet.com";
        }

        const expireIn7days = "<?= __('To protect the driver\'s privacy, the following video will expire in 7 days.'); ?>";
        const FrontCamera = "<?= __('Front Camera'); ?>";
        const InternalCamera = "<?= __('Internal Camera'); ?>";
        const RearCamera = "<?= __('Rear Camera'); ?>";
        const UnknownCamera = "<?= __('Unknown Camera'); ?>";
        const RemoveEmergency = "<?= __('We have removed you from the emergency contacts. You will no longer receive incident alerts via email or SMS.'); ?>";
        const PleaseEnter6DigitCode = "<?= __('Please enter a valid 6-digit code.'); ?>";
        const NoDataAvailable = "<?= __('No data available.'); ?>";
        const AnErrorOccurred = "<?= __('An error occurred.'); ?>";
        const NoVideosProvided = "<?= __('No videos provided.'); ?>";
        const FailedToRetrieveVideoContent = "<?= __('Failed to retrieve video content.'); ?>";
        const notSupportTheVideoTag = "<?= __(' Your browser does not support the video tag.'); ?>";

        const otpInputs = document.querySelectorAll('.otp-input');
        otpInputs.forEach((input, index) => {

            input.addEventListener('input', (e) => {
                if (e.target.value.length === 1) {
                    if (index < otpInputs.length - 1) {
                        otpInputs[index + 1].focus();
                    }
                }
            });

            input.addEventListener('keydown', (e) => {
                if (e.key === 'Backspace' && e.target.value.length === 0) {
                    if (index > 0) {
                        otpInputs[index - 1].focus();
                    }
                }
            });
        });

        function getQueryParameter(name) {
            const urlParams = new URLSearchParams(window.location.search);
            return urlParams.get(name);
        }

        function parseUrl(url) {
            console.trace(url);
            const parsedUrl = new URL(url);
            const fqdn = parsedUrl.protocol + "//" + parsedUrl.host + "/";
            const path = parsedUrl.pathname;
            const query = parsedUrl.search;

            const pattern = /(dev|prod|local)\/recordings\/([^\/]+)\/([^\/]+)\/([^\/]+)\/materials\/([^\/]+)\/material.mp4/;
            const matches = path.match(pattern);

            let link;
            if (matches && matches.length === 6) {
                const environment = matches[1];
                const firstControl = encodeURIComponent(environment + "/recordings/" + matches[2] + "/" + matches[3] + "/" + matches[4] + "/materials/" + matches[5] + "/material.mp4");
                link = fqdn + firstControl + query;
                console.trace(url);
            } else {
                link = url;
            }

            return link;
        }

        function submitCode() {
            let accessCode = '';
            const otpInputs = document.querySelectorAll('.otp-input');
            otpInputs.forEach(input => {
                accessCode += input.value;
            });
            console.log('accessCode:' + accessCode);
            const shortCode = getQueryParameter('s_c');
            if (accessCode.length === 6) {
                const fullCode = accessCode + shortCode;
                fetch(`${vmb2c_url}/${fullCode}`)
                    .then(response => response.json())
                    .then(data => {
                        console.log(data.data);
                        if (data.message === 'SendInvitation') {
                            window.location.replace(data.data); //轉址
                        } else {
                            if (!data.data || !data.data.original_url || data.data.original_url.length === 0) {
                                alert(NoDataAvailable);
                            } else {
                                console.log(data.data.original_url);
                                const inputContainer2 = document.getElementById('input-container2');
                                inputContainer2.style.display = 'block';
                                inputContainer2.style.display = 'flex';
                                inputContainer2.style.justifyContent = 'center';
                                inputContainer2.style.alignItems = 'center';
                                inputContainer2.style.flexDirection = 'column';
                                inputContainer2.style.minHeight = '50vh';
                                document.getElementById('video-section').style.display = 'block';
                                displayVideos(data.data.original_url);
                                document.getElementById('input-container').style.display = 'none';
                                document.getElementById('remove-contact-btn').style.display = 'block';
                            }
                        }
                    })
                    .catch(error => {
                        console.error('Error:', error);
                        alert(AnErrorOccurred);
                    });
            } else {
                alert(PleaseEnter6DigitCode);
            }
        }

        function displayVideos(videoUrls) {
            const container = document.getElementById('video-section');
            container.innerHTML = '';
            const pElement = document.createElement('p');
            pElement.id = 'video-title';
            pElement.textContent = expireIn7days;
            pElement.style.textAlign = 'left';
            container.appendChild(pElement);

            if (videoUrls && Array.isArray(videoUrls)) {
                videoUrls.forEach((url, index) => {
                    let cameraPosition;
                    switch (url.capture_mode) {
                        case 'C_F':
                            cameraPosition = FrontCamera;
                            break;
                        case 'C_I':
                            cameraPosition = InternalCamera;
                            break;
                        case 'C_R':
                            cameraPosition = RearCamera;
                            break;
                        default:
                            cameraPosition = UnknownCamera;
                    }
                    const link = parseUrl(url.video_url);
                    const videoElement = document.createElement('div');
                    videoElement.className = 'video-container';
                    videoElement.innerHTML = `
                <h2>${cameraPosition}</h2>
                <video controls autoplay muted>
                    <source src="${link}" type="video/mp4">
                    ${notSupportTheVideoTag}
                </video>
            `;
                    container.appendChild(videoElement);
                });
            } else {
                container.innerHTML = '<p>' + NoVideosProvided + '</p>';
            }
        }

        function closePopup() {
            let accessCode = '';
            const otpInputs = document.querySelectorAll('.otp-input');
            otpInputs.forEach(input => {
                accessCode += input.value;
            });
            console.log('accessCode:' + accessCode);
            const shortCode = getQueryParameter('s_c');
            if (accessCode.length === 6) {
                const fullCode = accessCode + shortCode;
                fetch(`${vmb2c_url}/remove-emergency-${fullCode}`)
                    .then(response => response.json())
                    .then(data => {

                        if (data.code === 'S00000') {
                            window.alert(RemoveEmergency);
                        } else {
                            window.alert(data.message);
                        }


                    })
                    .catch(error => {
                        console.error('Error:', error);
                        window.alert(AnErrorOccurred);
                    });
            } else {
                window.alert(PleaseEnter6DigitCode);
            }
        }


        function handleApiResponse(data) {
            if (data.code === 'S00000') {
                if (!data.data || !data.data.original_url || data.data.original_url.length === 0) {
                    alert(NoDataAvailable);
                } else {
                    console.log(data.data.original_url);

                    let cameraPosition;
                    switch (data.data.capture_mode) {
                        case 'C_F':
                            cameraPosition = FrontCamera;
                            break;
                        case 'C_I':
                            cameraPosition = InternalCamera;
                            break;
                        case 'C_R':
                            cameraPosition = RearCamera;
                            break;
                        default:
                            cameraPosition = UnknownCamera;
                    }

                    document.getElementById('camera-position').innerText = cameraPosition;
                    document.getElementById('video-section').style.display = 'block';
                    displayVideos(data.data.original_url);
                    document.getElementById('input-container').style.display = 'none';
                    document.getElementById('video-title').style.display = 'block';
                    document.getElementById('remove-contact-btn').style.display = 'block';
                }
            } else {
                alert(FailedToRetrieveVideoContent);
            }
        }

        document.addEventListener('DOMContentLoaded', () => {
            document.getElementById('submit-button').addEventListener('click', submitCode);
            document.getElementById('remove-contact-btn').addEventListener('click', function() {
                closePopup();
            });
        });
    </script>
</body>

</html>